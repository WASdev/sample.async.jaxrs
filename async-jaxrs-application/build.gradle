apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'maven-publish'
apply plugin: 'liberty'

buildscript {
    repositories {
        mavenLocal()
    }
    dependencies {
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:1.0-SNAPSHOT'
    }
}

// Dependencies
repositories { mavenCentral(); }

sourceSets {
    fvt
}

dependencies {
    compile group:'javax.ws.rs', name:'javax.ws.rs-api', version:'2.0'
    compile group:'javax.enterprise.concurrent', name:'javax.enterprise.concurrent-api', version:'1.0'
    compile group:'javax.json', name:'javax.json-api', version:'1.0'
    compile group:'javax.enterprise', name:'cdi-api', version:'1.2'
    compile group:'javax.ejb', name:'javax.ejb-api', version:'3.2'
    testCompile 'junit:junit:4.12'
    fvtCompile configurations.testCompile
    fvtRuntime configurations.testRuntime
}

sourceCompatibility = 1.7

// Set the Eclipse facets to use 3.1 of the Dynamic Web Module which requires Java 1.7 by default. Also include the JAX-RS facet.
eclipse.wtp.facet {
    // Clear default facets to work around bug where you get duplicates including wst 2.4
    facets = []
    facet name: 'jst.java', type: 'fixed'
    facet name: 'jst.web', type: 'fixed'
    facet name: 'jst.web', version: '3.1'
    facet name: 'jst.java', version: '1.7'
    facet name: 'jst.jaxrs', version: '2.0'
}

// Copy WAR into the local usr dir
task publishWar(dependsOn: 'jar', type: Copy) {
    from(war)
    into('../async-jaxrs-wlpcfg/servers/jaxrsSample/apps')
}

assemble.dependsOn('publishWar')

publishing {
    publications {
        mavenWar(MavenPublication) {
            version '1.0-SNAPSHOT'
            groupId 'net.wasdev.wlp.sample'
            artifactId 'async-jaxrs-application'
            
            from components.web
        }
    }
}

liberty {
    wlpDir = 'C:/install/wlp/8556/GM/wlp'
    serverName = 'jaxrsSample'
    userDir = '../async-jaxrs-wlpcfg'
    clean = true
}

task fvt(type: Test, dependsOn: jar) {
    group 'Verification'
    description 'Runs the functional verification tests.'
    testClassesDir = sourceSets.fvt.output.classesDir
    classpath = sourceSets.fvt.runtimeClasspath
    dependsOn publishWar, libertyStart
    finalizedBy libertyStop
}

check.dependsOn fvt

